<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sns.pet.dao.UserDao">
    <!--  회원가입  -->
    <insert id="insertUser" parameterType="JoinDto">
        INSERT INTO User(userID, userPW, userEmail, petCheck)
        VALUES(#{userID},#{userPW},#{userEmail}, #{petCheck})
        <selectKey resultType="Long" keyProperty="userNumber" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <!-- 회원 아이디 중복 체크 -->
    <select id="selectUserID" parameterType="String" resultType="integer">
        SELECT count(*)
        FROM User
        WHERE userID = #{userID}
    </select>

    <!-- 회원 조회 -->
    <select id="selectUser" parameterType="Long" resultType="userDto">
        SELECT userNumber, userID, userPW, userNickName, userEmail, petCheck, saveFolder, userPhotoName,
        userProfileContent, userType,
        (SELECT count(fromUserNumber) FROM Follow WHERE toUserNumber = #{userNumber}) as followerCnt,
        (SELECT count(toUserNumber) FROM Follow WHERE fromUserNumber = #{userNumber}) as followingCnt
        FROM User
        WHERE userNumber = #{userNumber}
    </select>

    <!--  회원정보 수정  -->
    <update id="updateUser" parameterType="joinDto">
        UPDATE User
        SET userPW=#{userPW}, userNickName=#{userNickName}, petCheck=#{petCheck},
        userProfileContent=#{userProfileContent}
        WHERE userNumber = #{userNumber}
    </update>

    <!-- 회원정보 중 닉네임만 수정 -->
    <update id="updateUserNickName" parameterType="map">
        UPDATE User
        SET userNickName = #{userNickName}
        WHERE userNumber = #{userNumber}
    </update>

    <!--  회원탈퇴  -->
    <delete id="deleteUser" parameterType="Long">
        DELETE
        FROM User
        WHERE userNumber = #{userNumber}
    </delete>

    <!-- 회원 프로필 사진 수정 -->
    <update id="updateUserPhoto" parameterType="userDto">
        UPDATE User
        SET saveFolder=#{saveFolder}, userPhotoName=#{userPhotoName}
        WHERE userNumber = #{userNumber}
    </update>

    <!--  회원정보 전송  -->
    <select id="selectUserInfo" parameterType="Long" resultType="UserPetDto">
        SELECT u.saveFolder, u.userPhotoName, u.userNickName, u.userID, u.userProfileContent, p.petName, p.petGender, p.petBirth, a.animalName
        FROM User u JOIN Pet p ON u.userNumber = p.userNumber
        JOIN Animal a ON a.animalNumber = p.animalNumber
        WHERE u.userNumber = #{userNumber}
    </select>

    <!--  회원정보 전송  -->
    <select id="selectNoPetUserInfo" parameterType="Long" resultType="UserPetDto">
        SELECT saveFolder, userPhotoName, userNickName, userID, userProfileContent
        FROM User
        WHERE userNumber = #{userNumber}
    </select>

    <!-- 회원번호 전송 -->
    <select id="selectUserNumber" parameterType="String" resultType="UserDto">
        SELECT userNumber
        FROM User
        WHERE userID = #{userID}
    </select>

    <!-- 팔로우 -->
    <insert id="insertFollow" parameterType="Long">
        INSERT INTO Follow(fromUserNumber, toUserNumber)
        VALUES(#{fromUserNumber}, #{toUserNumber})
    </insert>

    <!-- 언팔로우 -->
    <delete id="deleteFollow" parameterType="Long">
        DELETE FROM Follow
        WHERE fromUserNumber = #{fromUserNumber} AND toUserNumber = #{toUserNumber}
    </delete>

    <!-- 팔로우 리스트 조회 -->
    <select id="selectFollowList" parameterType="Long" resultType="UserDto">
        SELECT f.fromUserNumber, u.userNumber, u.userID, u.userNickName, u.saveFolder, u.userPhotoName
        FROM Follow f join User u ON u.userNumber = f.fromUserNumber
        WHERE f.toUserNumber = #{userNumber};
    </select>

    <!-- 팔로잉 리스트 조회 -->
    <select id="selectFollowingList" parameterType="Long" resultType="UserDto">
        SELECT f.toUserNumber, u.userNumber, u.userID, u.userNickName, u.saveFolder, u.userPhotoName
        FROM Follow f join User u ON u.userNumber = f.toUserNumber
        WHERE f.fromUserNumber = #{userNumber};
    </select>
</mapper>
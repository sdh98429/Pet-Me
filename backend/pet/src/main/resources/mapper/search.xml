<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sns.pet.dao.SearchDao">

    <!-- 최근 검색 기록 조회 (최대 10개까지) -->
    <select id="selectPastKeyword" parameterType="Long" resultType="String">
        SELECT searchWord
        FROM SearchRecord
        WHERE userNumber = #{userNumber}
        ORDER BY searchDate desc LIMIT 10;
    </select>

    <!-- 유저 관련 연관 검색어/자동 완성 userID로 조회 -->
    <select id="selectUserKeywordByUserID" parameterType="String" resultType="userDto">
        SELECT userNumber, userID, userNickName, saveFolder, userPhotoName
        FROM User
        WHERE userID LIKE CONCAT('%', #{searchWord}, '%')
    </select>

    <!-- 유저 관련 연관 검색어/자동 완성 NickName으로 조회 -->
    <select id="selectUserKeywordByName" parameterType="String" resultType="userDto">
        SELECT userNumber, userID, userNickName, saveFolder, userPhotoName
        FROM User
        WHERE userNickName LIKE CONCAT('%', #{searchWord}, '%')
    </select>

    <!-- 동물 종(animalName)으로 검색 시, 해당 동물을 펫으로 하는 유저 조회 -->
    <select id="selectUserByAnimalName" parameterType="String" resultType="userDto">
        SELECT u.userNumber, u.userID, u.userNickName, u.saveFolder, u.userPhotoname,
        (SELECT count(*) FROM Follow WHERE toUserNumber = u.userNumber) AS followereCnt
        FROM User u
        INNER JOIN Pet p USING(userNumber)
        INNER JOIN Animal a USING(animalNumber)
        WHERE a.animalName LIKE CONCAT(#{searchWord}, '%')
        GROUP BY u.userNumber;
    </select>

    <!-- 검색어 저장: 날짜는 자동으로 검색날짜로 저장 -->
    <insert id="insertKeyword" parameterType="SearchDto">
        INSERT IGNORE INTO SearchRecord (userNumber, searchWord)
        VALUE (#{userNumber}, #{searchWord})
        ON DUPLICATE KEY UPDATE searchDate = now()
    </insert>
</mapper>